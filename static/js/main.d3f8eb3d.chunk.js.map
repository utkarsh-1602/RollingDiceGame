{"version":3,"sources":["Die.js","RollingDice.js","App.js","reportWebVitals.js","index.js"],"names":["Die","this","props","face","rolling","className","Component","RollingDice","state","die1","die2","roll","bind","sides","setState","Math","floor","random","length","setTimeout","handleBtn","disabled","onClick","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","querySelector"],"mappings":"4SAGMA,E,4JACF,WAEI,MAAwBC,KAAKC,MAAtBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAIb,OAAO,mBAAGC,UAAS,0BAAsBF,EAAtB,sBAChBC,GAAW,qB,GARJE,aAaHN,ICZTO,G,wDAYF,WAAYL,GAAO,IAAD,8BACd,cAAMA,IAWDM,MAAQ,CACTC,KAAM,MACNC,KAAM,MACNN,SAAS,GAEb,EAAKO,KAAO,EAAKA,KAAKC,KAAV,gBAjBE,E,wCAoBlB,WAAO,IAAD,OACKC,EAASZ,KAAKC,MAAdW,MACPZ,KAAKa,SAAS,CAGVL,KAAMI,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAC7CR,KAAMG,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,SAC7Cd,SAAS,IAIbe,YAAW,WAEP,EAAKL,SAAS,CAACV,SAAS,MACzB,O,oBAGP,WACI,IAAMgB,EAAYnB,KAAKO,MAAMJ,QAAU,mBAAoB,GAE3D,EAA8BH,KAAKO,MAA5BC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAMN,EAAnB,EAAmBA,QAEnB,OACI,sBAAKC,UAAU,cAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,cAAC,EAAD,CAAKF,KAAMM,EAAML,QAASA,IAC1B,cAAC,EAAD,CAAKD,KAAMO,EAAMN,QAASA,OAE9B,wBAAQC,UAAWe,EACXC,SAAUpB,KAAKO,MAAMJ,QACrBkB,QAASrB,KAAKU,KAFtB,SAGaV,KAAKO,MAAMJ,QAAU,UAAW,uB,GA/DnCE,cAApBC,EAIKgB,aAAe,CAClBV,MAAO,CAAC,MAAO,MAAO,QAAS,OAAQ,OAAQ,QAiExCN,Q,MC9DAiB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,cAAc,UAMzBZ,M","file":"static/js/main.d3f8eb3d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Die.css';\r\n\r\nclass Die extends Component {\r\n    render() {\r\n\r\n        const {face, rolling} = this.props; \r\n\r\n        // Using font-awesome-icon to show the exact number of dots \r\n        // <i class=\"fas fa-dice\"></i> is font-awesome html code for using the icon \r\n        return <i className={ `Die fas fa-dice-${face}\r\n         ${rolling && 'Die-shaking'}`}/>\r\n\r\n    }\r\n}\r\n\r\nexport default Die","import React, {Component} from 'react';\r\nimport Die from './Die';\r\nimport './RollingDice.css';\r\n\r\nclass RollingDice extends Component {\r\n    \r\n    //Face Numbers passed as default props\r\n    \r\n    static defaultProps = {\r\n        sides: ['one', 'two', 'three', 'four', 'five', 'six']\r\n\r\n        /* In React Constructor are used only for two Purposes: \r\n       > Initializing local state by assigning an object to this.state.\r\n       > Binding event handler methods to an instance.\r\n        */\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        /*\r\n        Super(): It is used to call the constructor of its parent class.\r\n        This is required when we need to access some variables of its parent class.\r\n\r\n        Props: It is a special keyword that is used in react stands for properties.\r\n        Used for passing data from one component to another.\r\n        */\r\n\r\n        //States \r\n        // State is a plain JavaScript object used by React to represent an information about the component's current situation\r\n        this.state = {\r\n            die1: 'one', \r\n            die2: 'one', \r\n            rolling: false\r\n        }\r\n        this.roll = this.roll.bind(this)\r\n//  bind() method allows us to easily set which object will be bound by the this keyword when a function or method is invoked\r\n    }\r\n    roll(){\r\n        const {sides} = this.props;\r\n        this.setState({\r\n            \r\n            //changing the state upon click \r\n            die1: sides[Math.floor(Math.random() * sides.length)], \r\n            die2: sides[Math.floor(Math.random() * sides.length)], \r\n            rolling: true\r\n        })\r\n\r\n        // Start Timer of One Second when rolling start \r\n        setTimeout(() => {\r\n            //when time is Over, set rolling to false \r\n            this.setState({rolling: false})\r\n        }, 1000);\r\n    }\r\n    \r\n    render() {\r\n        const handleBtn = this.state.rolling ? 'RollDice-rolling': '' \r\n\r\n        const {die1, die2, rolling} = this.state; \r\n\r\n        return(\r\n            <div className=\"RollingDice\">\r\n                <div className=\"RollingDice-container\">\r\n                    <Die face={die1} rolling={rolling} />\r\n                    <Die face={die2} rolling={rolling} />\r\n                </div>\r\n                <button className={handleBtn}\r\n                        disabled={this.state.rolling}\r\n                        onClick={this.roll}>\r\n                            {this.state.rolling ? 'Rolling': 'Roll Dice! '}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default RollingDice; ","import React from 'react';\nimport RollingDice from './RollingDice';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <RollingDice/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, \n  document.querySelector('#root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}